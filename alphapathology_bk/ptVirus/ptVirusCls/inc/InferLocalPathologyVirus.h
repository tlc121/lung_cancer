//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : VIRUS
//  @ File Name : InferLocalPathologyVirus.h
//  @ Date : 2019/8/15
//  @ Author : weiping liu
//
//


#if !defined(_INFERLOCALPATHOLOGYVIRUS_H)
#define _INFERLOCALPATHOLOGYVIRUSE_H

#include "InferLocalBase.h"
#include "IFPipelinePathologyVirusOut.h"
#include "IFPipelinePathologyVirusTemp.h"
#include "opencv2/opencv.hpp"
#include "CommonUtils.h"

#include "tensorflow/core/framework/graph.pb.h"
#include "tensorflow/core/framework/tensor.h"
#include "tensorflow/core/graph/default_device.h"
#include "tensorflow/core/graph/graph_def_builder.h"
#include "tensorflow/core/platform/logging.h"
#include "tensorflow/core/platform/types.h"
#include "tensorflow/core/public/session.h"


namespace ALPHA
{
	namespace VIRUS
	{
		class InferLocalPathologyVirus : public COMM::InferLocalBase {
		public:
			explicit InferLocalPathologyVirus();
			~InferLocalPathologyVirus() override;
			COMM::DataObj* predict(COMM::DataObj* dataObj, const std::string& modelName) override;
			void mat2Tensor(cv::Mat image, tensorflow::Tensor& t);

			
		private:

			const std::string input_node;
			const std::string output_node;
			//libconfig::Config mConfig;
			std::string gpus = "0";
		};
	}
}


#endif  //_INFERLOCALPATHOLOGYVIRUS_H
