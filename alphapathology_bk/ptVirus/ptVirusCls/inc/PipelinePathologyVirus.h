//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Virus
//  @ File Name : PipelinePathologyVirus.h
//  @ Date : 2019/8/15
//  @ Author : weiping liu
//
//


#if !defined(_PIPELINEPATHOLOGYVIRUS_H)
#define _PIPELINEPATHOLOGYVIRUS_H



#include "PipelineAlgorithmExecutor.h"
#include "IFPipelinePathologyVirusIn.h"
#include "IFPipelinePathologyVirusOut.h"
#include "PipelinePathologyVirus_export.h"

namespace ALPHA
{
	namespace VIRUS
	{


		class PIPELINEPATHOLOGYVIRUS_EXPORT PipelinePathologyVirus : public COMM::PipelineAlgorithmExecutor {
		public:
			explicit PipelinePathologyVirus();
			~PipelinePathologyVirus() override;
			void setInput(std::shared_ptr<COMM::DataObj> Input) override;
			std::shared_ptr<COMM::DataObj> getOutput() override;
		protected:
			void executePipeline() override;
			void setUpPipeline() override;
		private:
			std::shared_ptr<VIRUS::IFPipelinePathologyIn> ptrPipelineIn;
			std::shared_ptr<IFPipelinePathologyVirusOut> ptrPipelineOut;
		};
	}
}



#endif  //_PIPELINEPATHOLOGYVIRUS_H
