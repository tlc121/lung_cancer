//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : VIRUS
//  @ File Name : IFPipelinePathologyVIRUSOut.h
//  @ Date : 2019/8/15
//  @ Author : weiping liu
//
//


#if !defined(_IFPIPELINEPATHOLOGYVIRUSOUT_H)
#define _IFPIPELINEPATHOLOGYVIRUSOUT_H
#include <string>
#include <vector>
#include "IFBase.h"
#include "PipelinePathologyVirus_export.h"
namespace ALPHA
{
	namespace VIRUS
	{

		struct PIPELINEPATHOLOGYVIRUS_EXPORT Detection {
			int cls; // "type"
			float conf;// "prob"
			int left; // topleft_x
			int top; // topleft_y
			int right; // bottomright_x
			int bottom; // bottomright_y
		};

		class PIPELINEPATHOLOGYVIRUS_EXPORT IFPipelinePathologyVirusOut : public COMM::IFBase {
		public:
			IFPipelinePathologyVirusOut():COMM::IFBase(){}
			~IFPipelinePathologyVirusOut() override {}
				
			//int num_tumor_patch = 0;
			int sample_result = 0;
			float cell_ratio = 0.5;
			int task_type = 3;
			bool ALL_IMAGE_BROKEN = false;
			//const int IMAGE_SIZE = 512;
			//const int CLASS = 1;
			std::string disease_type;
			std::string sample_name;
			std::vector<std::string> image_names;
			std::vector<std::vector<Detection>> preditions;
			std::vector<int> image_results;
			std::vector<std::string> image_type;

		};
	}
}



#endif  //_IFPIPELINEPATHOLOGYVIRUSOUT_H
