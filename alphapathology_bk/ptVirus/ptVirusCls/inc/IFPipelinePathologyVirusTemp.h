//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : VIRUS
//  @ File Name : IFPipelinePathologyVIRUSTemp.h
//  @ Date : 2019/8/15
//  @ Author : weiping liu
//
//


#if !defined(_IFPIPELINEPATHOLOGYVIRUSTEMP_H)
#define _IFPIPELINEPATHOLOGYVIRUSTEMP_H

#include "IFBase.h"
#include "tensorflow/core/framework/tensor.h"
#include "opencv2/opencv.hpp"
#include <vector>
#include <string>

namespace ALPHA
{
	namespace VIRUS
	{
		class IFPipelinePathologyVirusTemp : public COMM::IFBase {
		public:
			IFPipelinePathologyVirusTemp(): COMM::IFBase(){}
			~IFPipelinePathologyVirusTemp() override {}
				
			//int num_tumor_patch = 0;
			//int sample_result = 0;
			//float cell_ratio = 0.5;
			int IMAGE_SIZE = 512;
			int TARGET_NUM_THRESH = 0;
			float TARGET_CONF_THRESH = 0.2;
			bool ALL_IMAGE_BROKEN = false;
			std::string TYPE_0;
			std::string TYPE_1;
			std::string sample_name;
			std::vector<std::string> image_names;
			std::vector<cv::Mat> images; //original images
			std::vector<std::pair<int, int>> ori_img_shapes; // original image shape(row, column)
			std::vector<tensorflow::Tensor> outputs;
		};
	}
}



#endif  //_IFPIPELINEPATHOLOGYVIRUSTEMP_H
