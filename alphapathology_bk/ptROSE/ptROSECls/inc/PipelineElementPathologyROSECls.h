//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : ROSE
//  @ File Name : PipelineElementPathologyROSECls.h
//  @ Date : 2019/8/15
//  @ Author : weiping liu
//
//


#if !defined(_PIPELINEELEMENTPATHOLOGYROSECLS_H)
#define _PIPELINEELEMENTPATHOLOGYROSECLS_H

#include "PipelineElementAlgorithmMachineLearningBase.h"
#include "PipelinePathologyROSE_export.h"
#include "IFPipelinePathologyIn.h"
#include "IFPipelinePathologyROSEOut.h"

namespace ALPHA
{
	namespace ROSE
	{
		PIPELINEPATHOLOGYROSE_EXPORT class PipelineElementPathologyROSECls : public COMM::PipelineElementAlgorithmMachineLearningBase
		{
		public:
			explicit PipelineElementPathologyROSECls();
			~PipelineElementPathologyROSECls() override;
			void setInput(std::shared_ptr< COMM::DataObj > Input) override;
			std::shared_ptr<COMM::DataObj> getOutput() override;
			


		private:
			std::shared_ptr<IFPipelinePathologyIn> ptrInterfaceData;
			ALPHA::COMM::DataObj* rose_out;

		protected:
			void preproc() override;
			void infer() override;
			void postproc() override;
		};
	}
}


#endif  //_PIPELINEELEMENTPATHOLOGYROSECLS_H
